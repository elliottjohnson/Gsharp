begingroup

  local_variable(numeric)(tie_thickness)
    (round(0.33 * staff_line_distance));
  local_variable(numeric)(top)
    (round(0.33 * staff_line_distance)-1);
  local_variable(numeric)(bot)
    (round(0.33 * staff_line_distance));
  local_variable(numeric)(small_tie_height)
    (round(0.5 * staff_line_distance));

  save small_tie_up;
  def small_tie_up(expr width) =
    fill ((0, top){right} ..
	  (width, top-small_tie_height) --
	  (width-1, top-small_tie_height) ..
	  (0.5*width, top-tie_thickness) ..
	  (0, top-tie_thickness) ..
	  (-0.5*width, top-tie_thickness) ..
	  (-(width-1), top-small_tie_height) --
	  (-width, top-small_tie_height) .. cycle)
    scaled magnification;
  enddef;

  save small_tie_up_light;
  def small_tie_up_light(expr width) =
    fill ((0, top){right} ..
	  (width, top-small_tie_height) --
	  (width-1, top-small_tie_height) ..
	  (0.5*width, top-tie_thickness) ..
	  (0, top-tie_thickness) ..
	  (-0.5*width, top-tie_thickness) ..
	  (-(width-1), top-small_tie_height) --
	  (-width, top-small_tie_height) .. cycle)
    scaled magnification;
    stripes(width, 2*tie_thickness);
  enddef;

  save small_tie_down;
  def small_tie_down(expr width) =
    fill ((0, -bot){right} ..
          (width, small_tie_height-bot) --
	  (width-1, small_tie_height-bot) ..
	  (0.5*width, tie_thickness-bot) ..
	  (0, tie_thickness-bot) ..
	  (-0.5*width, tie_thickness-bot) ..
	  (-(width-1), small_tie_height-bot) --
	  (-width, small_tie_height-bot) .. cycle)
    scaled magnification;
  enddef;

  save small_tie_down_light;
  def small_tie_down_light(expr width) =
    fill ((0, -bot){right} ..
          (width, small_tie_height-bot) --
	  (width-1, small_tie_height-bot) ..
	  (0.5*width, tie_thickness-bot) ..
	  (0, tie_thickness-bot) ..
	  (-0.5*width, tie_thickness-bot) ..
	  (-(width-1), small_tie_height-bot) --
	  (-width, small_tie_height-bot) .. cycle)
    scaled magnification;
    stripes(width, 2*tie_thickness)
  enddef;

  begin_character(small_tie_one_up)
    small_tie_up(round(0.33 * staff_line_distance));
  end_character;

  begin_character(small_tie_one_up_light)
    small_tie_up_light(round(0.33 * staff_line_distance));
  end_character;

  begin_character(small_tie_two_up)
    small_tie_up(round(0.67 * staff_line_distance));
  end_character;

  begin_character(small_tie_two_up_light)
    small_tie_up_light(round(0.67 * staff_line_distance));
  end_character;

  begin_character(small_tie_three_up)
    small_tie_up(round(1.0 * staff_line_distance));
  end_character;

  begin_character(small_tie_three_up_light)
    small_tie_up_light(round(1.0 * staff_line_distance));
  end_character;

  begin_character(small_tie_four_up)
    small_tie_up(round(1.33 * staff_line_distance));
  end_character;

  begin_character(small_tie_four_up_light)
    small_tie_up_light(round(1.33 * staff_line_distance));
  end_character;

  begin_character(small_tie_five_up)
    small_tie_up(round(1.67 * staff_line_distance));
  end_character;

  begin_character(small_tie_five_up_light)
    small_tie_up_light(round(1.67 * staff_line_distance));
  end_character;

  begin_character(small_tie_six_up)
    small_tie_up(round(2.0 * staff_line_distance));
  end_character;

  begin_character(small_tie_six_up_light)
    small_tie_up_light(round(2.0 * staff_line_distance));
  end_character;

  begin_character(small_tie_seven_up)
    small_tie_up(round(2.33 * staff_line_distance));
  end_character;

  begin_character(small_tie_seven_up_light)
    small_tie_up_light(round(2.33 * staff_line_distance));
  end_character;

  begin_character(small_tie_eight_up)
    small_tie_up(round(2.67 * staff_line_distance));
  end_character;

  begin_character(small_tie_eight_up_light)
    small_tie_up_light(round(2.67 * staff_line_distance));
  end_character;

  begin_character(small_tie_one_down)
    small_tie_down(round(0.33 * staff_line_distance));
  end_character;

  begin_character(small_tie_one_down_light)
    small_tie_down_light(round(0.33 * staff_line_distance));
  end_character;

  begin_character(small_tie_two_down)
    small_tie_down(round(0.67 * staff_line_distance));
  end_character;

  begin_character(small_tie_two_down_light)
    small_tie_down_light(round(0.67 * staff_line_distance));
  end_character;

  begin_character(small_tie_three_down)
    small_tie_down(round(1.0 * staff_line_distance));
  end_character;

  begin_character(small_tie_three_down_light)
    small_tie_down_light(round(1.0 * staff_line_distance));
  end_character;

  begin_character(small_tie_four_down)
    small_tie_down(round(1.33 * staff_line_distance));
  end_character;

  begin_character(small_tie_four_down_light)
    small_tie_down_light(round(1.33 * staff_line_distance));
  end_character;

  begin_character(small_tie_five_down)
    small_tie_down(round(1.67 * staff_line_distance));
  end_character;

  begin_character(small_tie_five_down_light)
    small_tie_down_light(round(1.67 * staff_line_distance));
  end_character;

  begin_character(small_tie_six_down)
    small_tie_down(round(2.0 * staff_line_distance));
  end_character;

  begin_character(small_tie_six_down_light)
    small_tie_down_light(round(2.0 * staff_line_distance));
  end_character;

  begin_character(small_tie_seven_down)
    small_tie_down(round(2.33 * staff_line_distance));
  end_character;

  begin_character(small_tie_seven_down_light)
    small_tie_down_light(round(2.33 * staff_line_distance));
  end_character;

  begin_character(small_tie_eight_down)
    small_tie_down(round(2.67 * staff_line_distance));
  end_character;

  begin_character(small_tie_eight_down_light)
    small_tie_down_light(round(2.67 * staff_line_distance));
  end_character;

endgroup;
